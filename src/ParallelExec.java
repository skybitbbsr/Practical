import findLargestSmallest.NumbersetV2;public class ParallelExec {    public static void main(String args[]) throws InterruptedException {        int array[] = new int[] { 34, 45, 56, 67, 90 };        final NumbersetV2 myNumberSet = new NumbersetV2(array);        Thread thread1 = new Thread(new Runnable() {            public void run() {                System.out.println(Thread.currentThread().getName() + "-> "                    + myNumberSet.findLargest());            }        }, "LargestFinderThread");        Thread thread2 = new Thread(new Runnable() {            public void run() {                System.out.println(Thread.currentThread().getName() + "-> "                    + myNumberSet.getEvenSum());                System.out.println(Thread.currentThread().getName() + "-> "                    + myNumberSet.getOddSum());            }        }, "SumFinderThread");        Thread thread3 = new Thread(new Runnable() {            public void run() {                myNumberSet.sortArray();                myNumberSet.displayArray();            }        }, "SumFinderThread");        thread1.start();        thread2.start();        thread3.start();        try {            thread1.join();            thread2.join();            thread3.join();        } catch (InterruptedException e) {            // TODO Auto-generated catch block            e.printStackTrace();        }    }}